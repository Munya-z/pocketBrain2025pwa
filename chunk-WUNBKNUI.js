import{k as u,l as g}from"./chunk-6AXJB3HD.js";import{O as n,a as o,fa as l}from"./chunk-RB5HBADI.js";var c=class i{constructor(){}getDebtors=l(JSON.parse(localStorage.getItem("debtors")||"[]"));createNewDebtor(r){r.id=u("debtor"),r.totalAmountOwed=this.calculateTotalOwed(r),this.getDebtors.update(e=>[...e,r]),localStorage.setItem("debtors",JSON.stringify(this.getDebtors()))}calculateTotalOwed(r){let e=0;return r.debtInstances.forEach(a=>{a.status!=="paid"&&(e+=a.amount)}),e}editDebtorStatus(r,e){this.getDebtors.update(a=>a.map(t=>(t.id===r&&(t.status=e),t)))}checkIfAllPaid(r){return r.debtInstances.forEach(e=>(console.log(e.status),e.status=="paid"))}addDebtorDebtInstance(r,e){e.id=g("debtInstance"),this.getDebtors.update(a=>a.map(t=>(t.id===r&&(t.debtInstances.push(e),t.totalAmountOwed=this.calculateTotalOwed(t),t.totalAmountOwed>0&&this.editDebtorStatus(t.id,"pending")),t))),localStorage.setItem("debtors",JSON.stringify(this.getDebtors()))}editDebtorDebtInstance(r,e){this.getDebtors.update(a=>a.map(t=>(t.id===r&&(t.debtInstances=t.debtInstances.map(s=>s.id===e.id?o(o({},s),e):s)),t))),this.getDebtors.update(a=>a.map(t=>(t.totalAmountOwed=this.calculateTotalOwed(t),t.totalAmountOwed===0&&this.editDebtorStatus(t.id,"good"),t))),localStorage.setItem("debtors",JSON.stringify(this.getDebtors()))}deleteDebtor(r){this.getDebtors.update(e=>e.filter(a=>{a.id})),localStorage.setItem("debtors",JSON.stringify(this.getDebtors()))}static \u0275fac=function(e){return new(e||i)};static \u0275prov=n({token:i,factory:i.\u0275fac,providedIn:"root"})};export{c as a};
